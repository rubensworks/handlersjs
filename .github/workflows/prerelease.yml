
name: Publish release candidate

on:

  workflow_dispatch:

jobs:

  perform-checks:

    name: Perform checks
    uses: digita-ai/handlersjs/.github/workflows/checks.yml@develop

  publish-npm:

    name: Publish release candidate
    needs: perform-checks
    runs-on: ubuntu-latest

    steps:
    
      - name: Checkout ref
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Possible alternative for fetch-depth=0
      # - name: Fetch more tags
      #   run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Configure git
        run: | 
          git config user.name ${{github.actor}}
          git config user.email ${{github.actor}}@users.noreply.github.com
          git remote set-url origin https://${{github.actor}}:${{secrets.GA_TOKEN}}@github.com/${{github.repository}}.git

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com
  
      - name: Install dependencies
        run: npm run bootstrap
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build package
        run: npm run build:all

      - name: Publish package
        run: npx lerna publish --conventional-commits --conventional-prerelease --preid rc --dist-tag rc --yes --no-push
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push changes
        run: git -c "http.https://github.com/.extraheader=" push

  ### TODO: 
  ### - setup test environment
  ### - add packages
  ### - set correct docs deployment

  # publish-docker:

  #   name: Publish docker images
  #   needs: publish-npm
    
  #   steps:
      
  #     - name: Checkout ref
  #       uses: actions/checkout@v2

  #     - name: Extract tag
  #       id: extract-tag
  #       run: echo "::set-output name=tag::${GITHUB_REF/refs\/tags\//}"

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Log in to GitHub Container Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GA_TOKEN }}

  #     # Repeat for each package
  #     - name: Build and push platform api
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: packages/dgt-platform-api/
  #         push: true
  #         tags: |
  #           ghcr.io/digita-ai/dgt-platform-api:latest
  #           ghcr.io/digita-ai/dgt-platform-api:${{ steps.extract-tag.outputs.tag }}
  #         build-args: |
  #           NPM_TOKEN=${{secrets.GA_TOKEN}}

  # deploy:

  #   name: Deploy
  #   needs: publish-docker
  #   runs-on: ubuntu-latest

  #   steps:

  #     - name: Setup doctl
  #       uses: digitalocean/action-doctl@v2
  #       with:
  #         token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

  #     - name: Store DigitalOcean credentials
  #       run: doctl kubernetes cluster kubeconfig save dgt-k8s

  #     # Repeat for each package
  #     - name: Restart & verify deployment
  #       run: |
  #         kubectl rollout restart deployment dgt-platform-deployment
  #         kubectl rollout status deployment/dgt-platform-deployment

  #     - name: Restart & verify docs deployment
  #       run: |
  #         kubectl rollout restart deployment dgt-docs-deployment 
  #         kubectl rollout status deployment/dgt-docs-deployment
